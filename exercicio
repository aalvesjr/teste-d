#!/usr/bin/ruby

require './lib/account'
require './lib/account_id_verification_process'
require './lib/value_verification_process'

BALANCE_FILE = 'saldo.csv'
SEPARATOR = ","
MSG = <<HELP
[ERRO] Recebido #{ARGV.size} argumento(s).
A maneira de utilizar esse script é:

#{$0} /path/to/contas.csv /path/to/transacoes.csv

e será gerado o arquivo "#{BALANCE_FILE}" com o calculo final.
HELP

raise MSG unless ARGV.size == 2

accounts_with_balance = {}
accounts     = File.open(ARGV[0])
transactions = File.open(ARGV[1])

accounts.each do |line|
  id, initial_amount = line.split SEPARATOR

  if AccountIdVerificationProcess.process(id) && ValueVerificationProcess.process(initial_amount)
    accounts_with_balance[id] = Account.new(id, initial_amount)
  end
end

transactions.each do |line|
  id, transaction = line.split SEPARATOR

  if AccountIdVerificationProcess.process(id) && ValueVerificationProcess.process(transaction)
    accounts_with_balance[id].add_transaction transaction
  end
end

f = File.new(BALANCE_FILE, "w")
accounts_with_balance.each do |id, account|
  f.write("#{id},#{account.balance}\n")
  puts "#{id},#{account.balance}"
end
f.close
